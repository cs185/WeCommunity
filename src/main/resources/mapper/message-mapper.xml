<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.rice.wecommunity.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="findNotices" resultType="Message">
        SELECT <include refid="selectFields"></include> FROM chatapp.message where from_id = 1;
    </select>

    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and from_id != 1
        and conversation_id != '_'
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectGroupConversations" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and conversation_id = '_'
        and from_id = #{userId}
        group by to_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
                                       select max(id) as maxid from message
                                       where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
                                       group by conversation_id
                                   ) as m
    </select>

    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include> from message
        where status != 2
        and from_id != 1
        and (conversation_id = #{conversationId1} or conversation_id = #{conversationId2})
        order by id
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectGroupLetters" resultType="Message">
        select <include refid="selectFields"></include> from message
        where status != 2
        and conversation_id = '_'
        and to_id = #{groupId}
        order by id
    </select>

    <select id="selectGroupLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and to_id = #{groupId}
        and conversation_id = '_'
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectGroupLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id = #{userId}
        and to_id = #{groupId}
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="clearGroupMessages">
        DELETE FROM message
        WHERE conversation_id = '_'
        AND to_id = #{groupId};
    </delete>

    <select id="findAll" resultType="Message">
        SELECT <include refid="selectFields"></include> FROM chatapp.message;
    </select>

    <delete id="deleteAll">
        DELETE FROM chatapp.message;
    </delete>

    <insert id="batchInsertMessages" parameterType="java.util.List">
        INSERT INTO message (id, from_id, to_id, conversation_id, content, status, create_time)
        VALUES
        <foreach collection="mList" item="message" separator=",">
            (#{message.id}, #{message.fromId}, #{message.toId}, #{message.conversationId}, #{message.content}, #{message.status}, #{message.createTime})
        </foreach>
    </insert>

</mapper>